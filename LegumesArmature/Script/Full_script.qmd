---
title: "Legumes_Armature_Evo_Analyses"
author: "Friederike WÃ¶lke, Rachel Souza Ferreira, Renske Onstein"
format: html
editor: visual
---

```{r}
rm(list=ls())
gc()
```

## Set path variables

```{r}

# [1] traitData ================================================================= #

## Raw data:



## Processed data:
p.mammals.traits.short <- "../input/Mammals/Processed/mammal_traits_short.csv" # created from this script
p.mammals.traits.MCC <- "../input/Mammals/Processed/mammal_traits_MCC.csv" # created from this script

p.legumes.traits.corrected <- "../input/Legumes/Processed/Matrix_all_traits_tipsmatched.csv" # created from this script


# [2] PhyloTrees ================================================================ #

## Raw data:


## Processed data:
p.mammals.MCC <- "../input/Mammals/Processed/mammal_MCC.nex" # created from this script
p.mammals.MCC_drop <- "../input/Mammals/Processed/mammal_MCC_drop.nex" # created from this script

p.legumes.MCC_drop <- "../input/Legumes/Processed/Legumes_MCC_drop.rds"
# [3] Pre-processing files ====================================================== #



# General paths ============================================================= #

## Out path
out.path <- "../output/"

```

## Load libraries

```{r}
library(geiger)
library(ape)
library(phytools)
library(dplyr)
```

## Pre-Processing:

*see Script: 0_Data_PreProcessing.R*

### - Compute MCC tree for Mammals

-   requires: set of 1000 trees from the posterior distribution of the
    mammals phylogeny\
    (input/Mammals/Raw/)
-   phagorn library and mcc() function
-   produces file:
    -   input/Mammals/Processed/mammal_MCC.nex

### - Match tip labels and species names in Legumes data

-   requires:

    -   input/Legumes/Raw/replace_tip_labels.csv

    -   input/Legumes/Raw/Matrix_all_traits.csv

    -   input/Legumes/Raw/Mimo_metachronogram_mcc.tre

-   produces:

    -   input/Legumes/Processed/Matrix_all_traits_tipsmatched.csv

    -   output/CSV/legume_traits_short.csv

### - Data filtering for megaherbivory

-   input/Mammals/Processed/Mammals_MCC_drop.rds

### - Prune species from tree (Mammals)

-   input/Mammals/Processed/Mammals_MCC_drop.rds

-   input/Mammals/Processed/Mammals_traits_drop.rds

### - Prune species from tree (Legumes)

-   input/Legumes/Processed/Legumes_MCC_drop.rds

-   input/Legumes/Processed/Legumes_traits_drop.rds

### - Make trait vector (Mammals)

-   input/Mammals/Processed/Mass.rds

### - Make trait vector (Legumes)

-   input/Legumes/Processed/Armature.rds

## - Summary of objects required:

```{r}
# Final pruned MCC tree:

#tree_mammals <- mammal_PhyloSubset
tree_mammals <- readRDS("../input/Mammals/Processed/Mammals_MCC_drop.rds")

#tree_legumes <- mimo_PhyloSubset
tree_legums <- readRDS("../input/Legumes/Processed/Legumes_MCC_drop.rds")

# Vector with Megaherbivory information:
#trait_mammals <- Mass
trait_mammals <- readRDS("../input/Mammals/Processed/Mass.rds")

#trait_legumes <- Armature
trait_legumes <- readRDS("../input/Legumes/Processed/Armature.rds")

```

### - MK models

```{r, eval=F, echo=T}
# Mk models ============================
# estimate the rates of transitioning between ancestral states given a hypothesis 
# (either equal rates(ER), or different rates(ARD))

trait <- trait_mammals
tree <- tree_mammals


# computing time = 2.297s
system.time(
  equal <- fitDiscrete(tree, trait, model = "ER"), gcFirst = T
)

# computing time = 8.726s
system.time(
  ard <- fitDiscrete(tree, trait, model = "ARD")
)

# Calculate AIC weights
aic.discrete <- setNames(c(equal$opt$aic, ard$opt$aic), c("equal", "different"))
weights <- aicw(aic.discrete)
weights # ARD model performs better for megaherbivore/other


```

### - Simmap Reconstructions

```{r}

# For 100 simulation (nsim=100) --> computing time = 147.31s
system.time(
  mtrees <- make.simmap(tree, trait, model = "ARD", nsim = 100)
)

# 2.4s
system.time(
  pd_mtrees <- describe.simmap(mtrees, plot = FALSE)
)

pd_mtrees


mammals_simmap_100 <- mtrees
# saveRDS(mammals_simmap_100, paste0(out.path,"RDS/" ,"Mammals_simmap_100.rds"))
# saveRDS(pd_mtrees, paste0(out.path,"RDS/" ,"pd_mtrees_mammals.rds"))
```

```{r}
mammals_simmap_100 <- readRDS(paste0(out.path,"RDS/" ,"Mammals_simmap_100.rds"))
```
